name: Build and Release

on:
  push:
    tags:
      - 'v*' # This will trigger the workflow when you push a tag that starts with 'v'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Windows application
        run: npm run build:win

      - name: Upload Windows artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/win
          retention-days: 7

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Linux application
        run: npm run build:linux

      - name: Upload Linux artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: dist/linux
          retention-days: 7

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build macOS application
        run: npm run build:mac

      - name: Upload macOS artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist/mac
          retention-days: 7

  create-release:
    needs: [ build-windows, build-linux, build-macos ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Check for RELEASE_NOTES.md
        id: check_release_notes
        run: |
          if [ -f "RELEASE_NOTES.md" ]; then
            echo "has_notes=true" >> $GITHUB_OUTPUT
          else
            echo "has_notes=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create Release with Notes
        id: create_release_with_notes
        if: steps.check_release_notes.outputs.has_notes == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            artifacts/windows-build/**/*${{ steps.get_version.outputs.VERSION }}*.exe
            artifacts/linux-build/**/*.AppImage
            artifacts/linux-build/**/*.deb
            artifacts/macos-build/**/*.dmg
            artifacts/macos-build/**/*.zip

      - name: Create Release without Notes
        id: create_release_without_notes
        if: steps.check_release_notes.outputs.has_notes != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/windows-build/**/*${{ steps.get_version.outputs.VERSION }}*.exe
            artifacts/linux-build/**/*.AppImage
            artifacts/linux-build/**/*.deb
            artifacts/macos-build/**/*.dmg
            artifacts/macos-build/**/*.zip
